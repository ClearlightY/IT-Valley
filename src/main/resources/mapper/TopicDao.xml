<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <!-- Mybatis会动态实现daoImpl,不过需要在mapper文件夹下创建BookDao.xml和AppointmentDao.xml
  		spring-dao.xml文件会自动扫描mapper文件夹下的配置 -->
    <!-- 
    1.namespace是该xml对应的接口的全名
    2.select和update中的id对应方法名
    3.resultType是返回值类型
    4.parameterType是参数类型(可选)
    5.#{...}填写的是方法的参数 
    6.parameterType:输入参数类型
    7.resultType:输出参数类型
    -->
<mapper namespace="top.clearlight.dao.TopicDao">
	<!-- 目的：为dao接口方法提供sql语句配置 -->
	<resultMap id="BaseResultMap" type="top.clearlight.entity.Topic">
        <id column="topic_id" jdbcType="INTEGER" property="topicId"/>
        <result column="ptab" jdbcType="VARCHAR" property="ptab"/>
        <result column="tab" jdbcType="VARCHAR" property="tab"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="tag" jdbcType="VARCHAR" property="tag"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="excerpt" jdbcType="VARCHAR" property="excerpt"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="last_reply_time" jdbcType="TIMESTAMP" property="lastReplyTime"/>
        <result column="last_reply_author" jdbcType="VARCHAR" property="lastReplyAuthor"/>
        <result column="view_count" jdbcType="INTEGER" property="viewCount"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="top" jdbcType="BIT" property="top"/>
        <result column="good" jdbcType="BIT" property="good"/>
        <result column="show_status" jdbcType="BIT" property="showStatus"/>
        <result column="reply_count" jdbcType="INTEGER" property="replyCount"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="tag_is_count" jdbcType="BIT" property="tagIsCount"/>
        <result column="post_good_count" jdbcType="INTEGER" property="postGoodCount"/>
        <result column="post_bad_count" jdbcType="INTEGER" property="postBadCount"/>
        <result column="status_cd" jdbcType="VARCHAR" property="statusCd"/>
        <result column="node_slug" jdbcType="VARCHAR" property="nodeSlug"/>
        <result column="node_title" jdbcType="VARCHAR" property="nodeTitle"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
    </resultMap>
    <sql id="Base_Column_List">
        topic_id, ptab,tab,title,tag,content,excerpt, create_date, update_date, last_reply_time, last_reply_author, 
        view_count,author,top,good,show_status,reply_count,is_delete,tag_is_count,post_good_count,post_bad_count,
        status_cd,node_slug,node_title,remark,avatar,url
    </sql>
    <sql id="Admin_Column_List">
        topic_id, ptab,tab,title,tag,excerpt, create_date, update_date, last_reply_time, last_reply_author, 
        view_count,author,top,good,show_status,reply_count,is_delete,tag_is_count,post_good_count,post_bad_count,
        status_cd,node_slug,node_title,remark,avatar,url
    </sql>
	<!-- 根据板块查询所有话题 -->
	<select id="selectAllByTab" resultType="Topic">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			topic
		WHERE is_delete = '0'
		<if test="tab != null">
			<if test='tab == "all"'>
				order by top desc,create_date desc
			</if>
			<if test='tab == "hot"'>
				order by top desc,view_count desc
			</if>
			<if test='tab == "new"'>
				order by top desc,create_date desc
			</if>
		</if>
		<if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
     <!-- 根据节点查询所有话题 -->
	<select id="selectAllByNode" resultType="Topic">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			topic
		WHERE is_delete = '0'
		<if test="nodeTitle != null">
		AND node_title = #{nodeTitle}
		</if>
		order by top desc, last_reply_time desc,create_date desc
		<if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
     <!-- 根据昵称和板块查询话题 -->
	<select id="selectAllByPtabAndAuthor" resultType="Topic">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			topic
		WHERE is_delete = '0'
		<if test="ptab != null">
		AND ptab = #{ptab}
		</if>
		<if test="author != null">
		AND author = #{author}
		</if>
		order by create_date desc
		<if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
     <!-- 模糊查询所有话题 -->
	<select id="selectByLike" resultType="Topic">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			topic
		where title like '%${like}%'
		/*先按照置顶倒序排列，并且按照发布日期倒序排列*/
		order by top desc, last_reply_time desc
		<if test="start != null">
		    /*开始查询的位置： 例如10， 则从11开始显示*/
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                /*查询的数量*/
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
     <!-- 查询最新话题 -->
	<select id="selectAllNewest" resultType="Topic">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			topic
		WHERE is_delete = '0'
		<if test="nodeTitle != null">
		AND node_title = #{nodeTitle}
		</if>
		order by create_date desc,last_reply_time desc,create_date desc
		<if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
     <!-- 根据板块查询话题 -->
	<select id="selectByTab" resultType="Topic">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			topic
		where tab = #{tab}
		order by top desc, last_reply_time desc
		<if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
    <!-- 根据节点查询精华话题 -->
	<select id="selectAllGood" resultType="Topic">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			topic
		where good = 1
		AND is_delete = '0'
		<if test="nodeTitle != null">
		AND node_title = #{nodeTitle}
		</if>
		order by top desc, last_reply_time desc,create_date desc
		<if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
     <!-- 查询无人评论的话题 -->
	<select id="selectAllNoReply" resultType="Topic">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			topic
		where reply_count = 0
		AND is_delete = '0'
		<if test="nodeTitle != null">
		AND node_title = #{nodeTitle}
		</if>
		order by top desc, last_reply_time desc,create_date desc
		<if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
      <!-- 侧边栏-今日热门话题 -->
	<select id="selectHot" resultType="Topic">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			topic
		where TO_DAYS(create_date) = TO_DAYS(NOW())
		order by reply_count desc, create_date desc
		<if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
     <!-- 侧边栏-今日热门话题 -->
	<select id="selectTodayNoReply" resultType="Topic">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			topic
		where 
			reply_count = 0
		and 
			TO_DAYS(create_date) = TO_DAYS(NOW())
		order by 
			view_count desc, create_date desc
		<if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
      <!-- 首页-热门话题 -->
	<select id="selectIndexHot" resultType="Topic">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			topic
		where 
			DATE_SUB(CURDATE(), INTERVAL 7 DAY) <![CDATA[ <= ]]> date(create_date)
		<if test='tab == "good"'>
			and
				good = 1
			order by
				reply_count desc,view_count desc,create_date desc
		</if>
		<if test='tab == "newest"'>
			order by
				create_date desc,reply_count desc,view_count desc
		</if>
		<if test='tab == "noReply"'>
			and
				reply_count = 0
			order by 
				view_count desc,create_date desc
		</if>
		<if test='tab == null or tab == "all"'>
			order by
				reply_count desc,view_count desc,create_date desc
		</if>
		<if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
     <!-- 根据作者昵称分页查询所有话题 -->
	<select id="selectByAuthor" resultType="Topic">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			topic
		where is_delete = 0
        and author = #{author,jdbcType=VARCHAR}
        order by create_date desc
        <if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
     <!-- 根据话题ID查询话题 -->
	<select id="selectByTopicId" resultType="Topic">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			topic
		where topic_id = #{topicId}
     </select>
     <!-- 根据话题名称查询话题 -->
	<select id="selectByTopicName" resultType="Topic">
		SELECT
    topic_id,
		tab, 
		title, 
		tag, 
		create_date, 
		update_date, 
		last_reply_time, 
		last_reply_author, 
    view_count,author,
    top,
    good,
    show_status,
    reply_count,
    is_delete,
    tag_is_count,
    content,
    avatar
		FROM
			topic
		where title = #{title}
     </select>
      <!-- 根据话题名称、话题作者、话题标签、话题内容查询话题 -->
	<select id="selectByNameAndAuthorAndTagAndContent" resultType="Topic">
		SELECT
    topic_id,
		tab, 
		title, 
		tag, 
		create_date, 
		update_date, 
		last_reply_time, 
		last_reply_author, 
    view_count,author,
    top,
    good,
    show_status,
    reply_count,
    is_delete,
    tag_is_count,
    content,
    avatar
		FROM
			topic
		where title = #{title}
		and author = #{author}
		and tag = #{tag}
		and content = #{content}
     </select>
     <!-- 根据标题和时间查询话题 -->
     <select id="selectByTitleAndDate" resultType="Topic">
		SELECT
    topic_id,
		tab, 
		title, 
		tag, 
		create_date, 
		update_date, 
		last_reply_time, 
		last_reply_author, 
    view_count,author,
    top,
    good,
    show_status,
    reply_count,
    is_delete,
    tag_is_count,
    content,
    avatar
		FROM
			topic
		where title = #{title}
		and create_date = #{date}
     </select>
     <!-- 发布话题 -->
     <insert id="insert" parameterType="top.clearlight.entity.Topic" keyProperty="topicId" useGeneratedKeys="true">
    insert into 
           topic 
           (topic_id,
            ptab,
            tab, 
            title, 
            tag,
            content,
            create_date, 
            update_date, 
            last_reply_time, 
            last_reply_author, 
            view_count,
            author,
            top,
            good,
            show_status,
            reply_count,
            is_delete,
            tag_is_count,
            post_good_count,
            post_bad_count,
            status_cd,
            node_slug,
            node_title,
            remark,
            avatar,
            url)
            values 
            (#{topicId},
             #{ptab},
             #{tab}, 
             #{title}, 
             #{tag},
             #{content},
             #{createDate}, 
             #{updateDate}, 
             #{lastReplyTime}, 
             #{lastReplyAuthor}, 
             #{viewCount},
             #{author}, 
             #{top}, 
             #{good}, 
             #{showStatus},
             #{replyCount}, 
             #{isDelete}, 
             #{tagIsCount},
             #{postGoodCount},
             #{postBadCount},
             #{statusCd},
             #{nodeSlug},
             #{nodeTitle},
             #{remark},
             #{avatar},
             #{url})
  </insert>
    <update id="updateByTopicId" parameterType="top.clearlight.entity.Topic">
      UPDATE 
      	topic
      SET 
      	tab = #{tab,jdbcType=VARCHAR},
      	title = #{title,jdbcType=VARCHAR},
      	tag = #{tag,jdbcType=VARCHAR},
      	create_date = #{createDate,jdbcType=TIMESTAMP},
      	update_date = #{updateDate,jdbcType=TIMESTAMP},
      	last_reply_time = #{lastReplyTime,jdbcType=TIMESTAMP},
      	last_reply_author = #{lastReplyAuthor,jdbcType=VARCHAR},
      	view_count = #{viewCount,jdbcType=INTEGER},
      	author = #{author,jdbcType=VARCHAR},
      	top = #{top,jdbcType=BIT},
      	good = #{good,jdbcType=BIT},
      	show_status = #{showStatus,jdbcType=BIT},
      	reply_count = #{replyCount,jdbcType=INTEGER},
      	is_delete = #{isDelete,jdbcType=BIT},
      	tag_is_count = #{tagIsCount,jdbcType=BIT},
      	content = #{content,jdbcType=LONGVARCHAR},
      	node_title = #{nodeTitle,jdbcType=VARCHAR},
      	avatar = #{avatar,jdbcType=VARCHAR}
    WHERE 
    	topic_id = #{topicId,jdbcType=INTEGER}
    </update>
    <!-- 更新主题的头像 -->
	<update id="updateTopicAvatar" parameterType="top.clearlight.entity.User">
        update topic
        set avatar = #{avatar}
        where author = #{userName}
    </update>
    <!-- 更新节点名称 -->
    <update id="updateNodeTitile">
        UPDATE 
        	topic
        SET 
        	node_title = #{newNodeTitle}
        WHERE 
        	node_title = #{oldNodeTitle}
    </update>
    <!-- 根据ID删除话题 -->
  	<delete id="deleteById" parameterType="java.lang.Integer">
        delete from topic
        where topic_id = #{topicId,jdbcType=INTEGER}
    </delete>
    
    <!-- 根据作者删除话题 -->
    <delete id="deleteByAuthor" parameterType="java.lang.String">
        delete from topic
        where author = #{author,jdbcType=VARCHAR}
    </delete>
    
    <!-- 根据节点统计话题 -->
    <select id="countTopicByNode" resultType="java.lang.Integer">
        select count(topic_id)
        from topic t
        where t.is_delete = 0
        <if test="nodeTitle != null">
        and t.node_title = #{nodeTitle}
        </if>
    </select>
    <!-- 统计模糊查询 -->
    <select id="countLike" resultType="java.lang.Integer">
        select count(1)
        from topic t
        where t.title like '%${like}%'
    </select>
    <!-- 根据节点统计精华话题 -->
    <select id="countTopicGoodByNode" resultType="java.lang.Integer">
        select count(topic_id)
        from topic t
        where t.is_delete = 0 
        and t.good = 1
        <if test="nodeTitle != null">
        and t.node_Title = #{nodeTitle}
        </if>
    </select>
    <!-- 根据板块统计话题 -->
    <select id="countTopicByTab" resultType="java.lang.Integer">
        select count(topic_id)
        from topic t
        where t.is_delete = 0
    </select>
    <!-- 根据节点统计无人评论的话题 -->
    <select id="countTopicNoReplyByNode" resultType="java.lang.Integer">
        select count(topic_id)
        from topic t
        where t.is_delete = 0 
        and t.reply_count = 0
        <if test="nodeTitle != null">
        and t.node_title = #{nodeTitle}
        </if>
    </select>
    <!-- 根据昵称统计所有话题 -->
    <select id="countAllByName" resultType="java.lang.Integer">
        select count(1)
        from topic t
        where t.is_delete = 0 and t.author = #{name}
    </select>
    <!-- 根据昵称和板块统计话题 -->
    <select id="countAllByNameAndPtab" resultType="java.lang.Integer">
        select count(1)
        from topic t
        where t.is_delete = 0 
        <if test="name != null">
        and t.author = #{name}
        </if>
        <if test="ptab != null">
        and t.ptab = #{ptab}
        </if>
    </select>
    <!-- 分组统计所有标签的数量 -->
    <select id="countTag" resultType="java.lang.Integer">
        select count(1) from (
        select a.tag from topic a group by a.tag) b
    </select>
    <!-- 根据标签统计话题数量 -->
    <select id="countByTag" resultType="java.lang.Integer">
        select count(1)
        from topic t
        where t.is_delete = 0 and t.tag = #{tag}
    </select>
    <!-- 首页-热门话题 -->
    <select id="countIndexHot" resultType="java.lang.Integer">
        SELECT
        	COUNT(1)
        from
        	topic
        where 
			DATE_SUB(CURDATE(), INTERVAL 7 DAY) <![CDATA[ <= ]]> date(create_date)
		<if test='tab == "good"'>
			and
				good = 1
			order by
				reply_count desc,view_count desc,create_date desc
		</if>
		<if test='tab == "newest"'>
			order by
				create_date desc,reply_count desc,view_count desc
		</if>
		<if test='tab == "noReply"'>
			and
				reply_count = 0
			order by 
				view_count desc,create_date desc
		</if>
		<if test='tab == null or tab == "all"'>
			order by
				reply_count desc,view_count desc,create_date desc
		</if>
    </select>
    <!-- 分页查询所有标签 -->
  <select id="selectAllTag" resultType="Tag">
    SELECT
        a.tag,
        count(1) number
    FROM
      topic a
    group by a.tag order by count(1) desc
    <if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
       <!-- 根据标签查询话题 -->
  <select id="selectByTag" resultType="Topic">
    SELECT
        <include refid="Base_Column_List"/>
    FROM
      topic
    where tag = #{tag}
    order by create_date desc
    <if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
 	<select id="selectOther" resultType="Topic">
	SELECT
	  a.topic_id,
	  a.title
	FROM
	  topic a
	WHERE
	  a.author = #{userName}
	AND 
	  a.topic_id != #{topicId}
	ORDER BY
	  a.create_date
	LIMIT 
	  0,10
</select>
<!-- 统计当天的话题数 -->
<select id="countToday" resultType="java.lang.Integer">
        select count(1)
        from topic a
        where TO_DAYS(a.create_date) = TO_DAYS(NOW())
    </select>
    
    <!-- 后台话题列表 -->
    <select id="selectAllForAdmin" resultType="Topic">
		SELECT
        <include refid="Admin_Column_List"/>
		FROM
			topic
		WHERE is_delete = '0'
		<if test="author != null">
		AND author = #{author}
		</if>
		<if test="startDate != null and endDate != null">
		AND create_date BETWEEN #{startDate} and #{endDate}
		</if>
		ORDER BY create_date desc
		<if test="start != null">
            limit #{start,jdbcType=INTEGER}
            <if test="limit != null">
                ,#{limit,jdbcType=INTEGER}
            </if>
        </if>
     </select>
     
     <!-- 后台话题统计 -->
     <select id="countAllForAdmin" resultType="java.lang.Integer">
        SELECT
        	COUNT(1)
        FROM
        	topic
        WHERE 
			is_delete = '0'
		<if test='author != null'>
			AND author = #{author}
		</if>
		<if test='startDate != null and endDate != null'>
			AND create_date BETWEEN #{startDate} and #{endDate}
		</if>
    </select>

    <!-- 用户文章点赞数量 -->
    <select id="countTopicUp" resultType="java.lang.Integer">
        select count(1)
        from up_down
        where t_uid = #{uid}
        and up_down=1;
    </select>
</mapper>